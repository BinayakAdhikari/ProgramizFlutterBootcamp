// Mocks generated by Mockito 5.1.0 from annotations
// in flutter_bootcamp/test/src/news_feature/domain/usecase/get_all_article_usecase_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:flutter_bootcamp/src/config/appEnums.dart' as _i5;
import 'package:flutter_bootcamp/src/news_feature/domain/entity/articleEntity.dart'
    as _i2;
import 'package:flutter_bootcamp/src/news_feature/domain/repository/article_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeArticleRequest_0 extends _i1.Fake implements _i2.ArticleRequest {}

/// A class which mocks [ArticleRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticleRepository extends _i1.Mock implements _i3.ArticleRepository {
  MockArticleRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.ArticleRequest> getAllArticleRequest(
          {_i5.NewsFeedTabTypes? type}) =>
      (super.noSuchMethod(
              Invocation.method(#getAllArticleRequest, [], {#type: type}),
              returnValue:
                  Future<_i2.ArticleRequest>.value(_FakeArticleRequest_0()))
          as _i4.Future<_i2.ArticleRequest>);
}
